name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly-2024-05-06

jobs:
  machete:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete

      - name: Run cargo machete
        run: |
          cargo machete

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Run cargo test
        run: |
          cargo test --workspace --all-features

  fmt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          components: rustfmt
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Run rustfmt
        run: |
          cargo fmt --all -- --check

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run cargo doc
        run: |
          cargo doc --workspace --no-deps --all-features
        env:
          RUSTDOCFLAGS: -D warnings

  deny:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cargo-deny
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny

      - name: Run cargo deny
        run: |
          cargo deny check  -D warnings

  clippy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Clippy check
        run: cargo clippy --workspace --benches --tests --examples --all-features -- -D warnings

  clippy-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          components: clippy
          toolchain: ${{ env.RUST_TOOLCHAIN }}


      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Clippy check
        run: cargo clippy --workspace --benches --tests --examples --all-features -- -D warnings
  miri:
    name: Miri Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          components: miri
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Run tests
        # Pass -Zmiri-ignore-leaks beause it complains about the global rayon threadpool.
        run: MIRIFLAGS='-Zmiri-tree-borrows -Zmiri-ignore-leaks' cargo miri test --workspace --all-features --all-targets